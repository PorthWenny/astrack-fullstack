// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  username     String         @unique
  email        String         @unique
  password     String
  avatar       String?
  createdAt    DateTime       @default(now())
  isAdmin      Boolean        @default(false)
  favorites    Favorites[]
  Reservations Reservations[]
  Events       Events[]
}

model Facilities {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  location     String
  latitude     Float
  longitude    Float
  description  String
  img          String[]
  type         String
  floor        Int
  openHours    String
  owner        Owner?         @relation(fields: [ownerId], references: [id])
  ownerId      String?        @db.ObjectId
  favorites    Favorites[]
  Reservations Reservations[]
  Events       Events[]
}

model Favorites {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  user       Users      @relation(fields: [userId], references: [id])
  userId     String     @db.ObjectId
  facility   Facilities @relation(fields: [facilityId], references: [id])
  facilityId String     @db.ObjectId

  @@unique([userId, facilityId])
}

model Owner {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  image      String
  fbLink     String
  facilities Facilities[]
}

model Reservations {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  user        Users      @relation(fields: [userId], references: [id])
  userId      String     @db.ObjectId
  facility    Facilities @relation(fields: [facilityId], references: [id])
  facilityId  String     @db.ObjectId
  rsvDate     String
  rsvTime     String
  title       String
  department  String
  description String
  progress    String
}

model Events {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  user        Users      @relation(fields: [userId], references: [id])
  userId      String     @db.ObjectId
  facility    Facilities @relation(fields: [facilityId], references: [id])
  facilityId  String     @db.ObjectId
  description String
  eventDate   DateTime
  eventTime   String
}
